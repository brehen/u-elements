/// <reference types="vitest" />
import { defineConfig } from 'vite'
import { customElementVsCodePlugin } from 'custom-element-vs-code-integration'
import customElementsManifest from 'vite-plugin-cem'
import path from 'path'
import fs from 'fs';

// Save entry file
fs.writeFileSync('src/index.ts', [
  '// THIS FILE IS AUTO-GENERATED BY BUILD STEP',
  ...getEntries()
].join('\n'));

export default defineConfig({
  plugins: [
    customElementsManifest({
      files: ['./src/**/*.ts'],
      plugins: [
        // eslint-disable-next-line
        // @ts-ignore
        customElementVsCodePlugin({
          htmlFileName: 'vscode.json',
          cssFileName: null,
          outdir: 'dist'
        })
      ]
    })
  ],
  build: {
    sourcemap: true,
    lib: {
      entry: path.resolve('src/index.ts'),
      fileName: '[name]',
      formats: ['es', 'cjs']
    }
  },
  test: {
    environment: 'jsdom',
    // Store snapshots in .snapshots-folder
    resolveSnapshotPath: (testPath, ext) => `.snapshots${testPath}${ext}`
  }
})

function getEntries() {
  return fs.readdirSync('./src')
    .filter((name) => fs.existsSync(`src/${name}/${name}.ts`))
    .map((name) => `export * from './${name}/${name}'`);
}

// import type { JSX as QwikJSX } from '@builder.io/qwik/jsx-runtime';
// export type QwikProgress = QwikJSX.IntrinsicElements['progress'];
// declare module '@builder.io/qwik' {
//   export namespace QwikJSX {
//     export interface IntrinsicElements {
//       'u-progress': QwikProgress
//     }
//   }
// }
// declare module '@builder.io/qwik/jsx-runtime' {
//   export namespace JSX {
//     export interface IntrinsicElements {
//       'u-progress': QwikProgress
//     }
//   }
// }