import { customElementVsCodePlugin } from 'custom-element-vs-code-integration'
import customElementsManifest from 'vite-plugin-cem'
import fs from 'fs'

// Generate entry file
fs.writeFileSync('src/index.ts', `
// THIS FILE IS AUTO-GENERATED BY BUILD STEP
import type * as VueJSX from '@vue/runtime-dom'
import type { JSX as QwikJSX } from '@builder.io/qwik/jsx-runtime'
import type { JSX as ReactJSX } from 'react'
import type { JSX as SolidJSX } from 'solid-js'
import type { SvelteHTMLElements } from 'svelte/elements'

${fs.readdirSync('./src')
  .filter((fileName) => fileName.startsWith('u-') && fileName.endsWith('.ts'))
  .map((fileName) => {
    const code = String(fs.readFileSync(`src/${fileName}`))
    const tags = code.match(/'u-([^']+)': UHTML\1Element/gi)?.map((m) => m.split("'")[1]) || []
    return tags.map(getTypes).concat(`export * from './${fileName}'`).join('\n')
  })
  .join('\n')}
`)

export default {
  plugins: [
    customElementsManifest({
      files: ['src/u-*.ts'],
      plugins: [
        // @ts-ignore
        customElementVsCodePlugin({
          cssFileName: null,
          htmlFileName: 'vscode.json',
          outdir: 'dist'
        })
      ]
    })
  ],
  build: {
    lib: {
      entry: ['src/index.ts'],
      fileName: '[name]',
      formats: ['es', 'cjs']
    }
  }
}

function getTypes (utag: string) {
  const tag = utag.startsWith('u-tab') ? 'div' : utag.slice(2)
  const type = utag[2].toUpperCase() + utag.slice(3)
  return `
export type Vue${type} = VueJSX.IntrinsicElementAttributes['${tag}']
export type Qwik${type} = QwikJSX.IntrinsicElements['${tag}']
export type React${type} = ReactJSX.IntrinsicElements['${tag}']
export type SolidJS${type} = SolidJSX.HTMLElementTags['${tag}']
export type Svelte${type} = SvelteHTMLElements['${tag}']

// Augmenting @vue/runtime-dom instead of vue directly to avoid interfering with React JSX
declare module '@vue/runtime-dom' { export interface GlobalComponents { '${utag}': Vue${type} } }
declare module '@builder.io/qwik/jsx-runtime' { export namespace JSX { export interface IntrinsicElements { '${utag}': Qwik${type} } } }
declare global { namespace React.JSX { interface IntrinsicElements { '${utag}': React${type} } } }
declare module 'solid-js' { namespace JSX { interface IntrinsicElements { '${utag}': SolidJS${type} } } }
declare module 'svelte/elements' { interface SvelteHTMLElements { '${utag}': Svelte${type} } }`
}